import{_ as e,c as l,o as i,ae as t}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"递归算法","description":"","frontmatter":{},"headers":[],"relativePath":"article/数据结构与算法/算法/递归/递归概览.md","filePath":"article/数据结构与算法/算法/递归/递归概览.md","lastUpdated":1743862747000}'),r={name:"article/数据结构与算法/算法/递归/递归概览.md"};function o(h,a,n,c,s,d){return i(),l("div",null,a[0]||(a[0]=[t('<h1 id="递归算法" tabindex="-1">递归算法 <a class="header-anchor" href="#递归算法" aria-label="Permalink to &quot;递归算法&quot;">​</a></h1><h2 id="什么是递归" tabindex="-1">什么是递归？ <a class="header-anchor" href="#什么是递归" aria-label="Permalink to &quot;什么是递归？&quot;">​</a></h2><p>递归就是在过程或函数里调用自身。</p><blockquote><p>先有「递」再有「归」，「递」的意思是将问题拆解成子问题来解决， 子问题再拆解成子子问题，...，直到被拆解的子问题无需再拆分成更细的子问题（即可以求解），「归」是说最小的子问题解决了，那么它的上一层子问题也就解决了，上一层的子问题解决了，上上层子问题自然也就解决了,....,直到最开始的问题解决</p></blockquote><h2 id="递归需要满足三个条件" tabindex="-1">递归需要满足三个条件 <a class="header-anchor" href="#递归需要满足三个条件" aria-label="Permalink to &quot;递归需要满足三个条件&quot;">​</a></h2><ol><li>一个问题的解可以分为几个子问题的解</li><li>这个问题与分解后的子问题，除了数据规模不同，求解方式相同</li><li>存在递归终止条件</li></ol><h2 id="实现思路" tabindex="-1">实现思路： <a class="header-anchor" href="#实现思路" aria-label="Permalink to &quot;实现思路：&quot;">​</a></h2><ol><li>定义函数</li><li>找出递推公式</li><li>将递推公式带入函数中</li><li>检查时间复杂度是否可行</li></ol><h2 id="递归题" tabindex="-1">递归题 <a class="header-anchor" href="#递归题" aria-label="Permalink to &quot;递归题&quot;">​</a></h2><ol><li>电影院</li><li>求阶乘</li><li>斐波那契数/求台阶走法数/矩形覆盖</li><li>数字反转</li><li>汉诺塔</li></ol><h2 id="递归注意点" tabindex="-1">递归注意点 <a class="header-anchor" href="#递归注意点" aria-label="Permalink to &quot;递归注意点&quot;">​</a></h2><ol><li>重复计算</li><li>栈溢出</li></ol><p><a href="https://zhuanlan.zhihu.com/p/94748605" target="_blank" rel="noreferrer">一文看懂什么递归（算法小结）</a><a href="https://zhuanlan.zhihu.com/p/102440183" target="_blank" rel="noreferrer">干货｜五个递归题总结</a></p>',13)]))}const p=e(r,[["render",o]]);export{u as __pageData,p as default};
