import{_ as a,c as o,o as t,ae as l}from"./chunks/framework.Dh1jimFm.js";const h=JSON.parse('{"title":"Vue系列之7-ToyVue","description":"","frontmatter":{},"headers":[],"relativePath":"article/前端框架/vue/Vue系列之7-ToyVue.md","filePath":"article/前端框架/vue/Vue系列之7-ToyVue.md","lastUpdated":1743859882000}'),i={name:"article/前端框架/vue/Vue系列之7-ToyVue.md"};function r(u,e,d,c,n,_){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="vue系列之7-toyvue" tabindex="-1">Vue系列之7-ToyVue <a class="header-anchor" href="#vue系列之7-toyvue" aria-label="Permalink to &quot;Vue系列之7-ToyVue&quot;">​</a></h1><h4 id="_1、vue三要素" tabindex="-1">1、Vue三要素 <a class="header-anchor" href="#_1、vue三要素" aria-label="Permalink to &quot;1、Vue三要素&quot;">​</a></h4><ul><li>响应式：例如如何监听数据变化</li><li>模板引擎：如何解析模板</li><li>渲染：Vue如何监听到的数据变化和解析后的HTML进行渲染</li></ul><h4 id="_2、双向绑定" tabindex="-1">2、双向绑定 <a class="header-anchor" href="#_2、双向绑定" aria-label="Permalink to &quot;2、双向绑定&quot;">​</a></h4><ul><li>Object.defineProperty</li><li>Proxy</li></ul><h4 id="_3、实现步骤" tabindex="-1">3、实现步骤 <a class="header-anchor" href="#_3、实现步骤" aria-label="Permalink to &quot;3、实现步骤&quot;">​</a></h4><ol><li>实现 <code>reactivity</code></li><li>实现单向数据绑定</li><li>实现 <code>v-model</code> 双向绑定</li><li>实现 <code>v-bind</code></li><li>实现 <code>v-on</code></li></ol><p><a href="https://codepen.io/RealAaron/project/editor/DaVkbP" target="_blank" rel="noreferrer">ToyVue</a></p>',8)]))}const V=a(i,[["render",r]]);export{h as __pageData,V as default};
