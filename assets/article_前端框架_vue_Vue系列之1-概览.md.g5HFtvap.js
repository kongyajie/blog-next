import{_ as e,c as a,o as l,ae as r}from"./chunks/framework.Dh1jimFm.js";const p=JSON.parse('{"title":"Vue系列之1-概览","description":"","frontmatter":{},"headers":[],"relativePath":"article/前端框架/vue/Vue系列之1-概览.md","filePath":"article/前端框架/vue/Vue系列之1-概览.md","lastUpdated":1743862747000}'),i={name:"article/前端框架/vue/Vue系列之1-概览.md"};function o(u,t,d,n,s,h){return l(),a("div",null,t[0]||(t[0]=[r('<h1 id="vue系列之1-概览" tabindex="-1">Vue系列之1-概览 <a class="header-anchor" href="#vue系列之1-概览" aria-label="Permalink to &quot;Vue系列之1-概览&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>2018年接触Vue，到现在已经3年了，中间通过自学、公司项目零零散散地学习了Vue的使用和原理。如今的前端，Vue和React已经是必备的技能，因此有必要回顾和总结，对Vue有一个系统性的认知。</p><p>本文是对Vue的系统性总结，主要涵盖以下几个部分：</p><ol><li><strong>概览</strong>：涵盖vue的诞生背景，它和其他mvvm的区别，以及未来的发展趋势等内容</li><li><strong>使用</strong>：涵盖安装、基本使用、组件、高级特性等内容</li><li><strong>周边工具</strong>：涵盖vue-router路由、vuex状态管理</li><li><strong>原理</strong>：涵盖vue原理的三大因素，模板编译、数据响应式、虚拟dom和diff算法</li><li><strong>常见问答</strong>：主要是汇总一些常见的vue问题和解答</li><li><strong>Vue3</strong>：涵盖新特性、原理和vite</li></ol><p>希望通过本系列，能帮助你构建起vue的知识体系~</p><h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><blockquote><p><a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue</a> (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p></blockquote><p>通过官方定义，我们知道Vue的一些特点：</p><ul><li>轻量级渐进式框架（便于与第三方库或既有项目整合）</li><li>生态丰富（vue-cli、vue-router、vuex、社区UI组件库...）</li><li>易于上手（入门简单、中文文档友好）</li></ul><p>那么，vue解决了什么问题？</p><ul><li>HTML：从0到1</li><li>CSS：提供装饰</li><li>JavaScript(DOM)：支持页面动态化（例如倒计时）</li><li>jQuery：解决浏览器兼容问题、优雅API（解放前端，造轮子）</li><li>Angular/React/Vue：<strong>数据驱动视图</strong>，让开发者从DOM操作中解放（如倒计时，自加器）</li></ul><p>前端三大框架对比</p><table tabindex="0"><thead><tr><th>框架</th><th>发布年份</th><th>出自</th><th>star数</th><th>特性</th></tr></thead><tbody><tr><td>Angular</td><td>2010年</td><td>Google</td><td>73.7k</td><td>双向数据绑定</td></tr><tr><td>React</td><td>2013年</td><td>Facebook</td><td>169k</td><td>VirtualDOM、Redux</td></tr><tr><td>Vue</td><td>2014年</td><td>尤雨溪EvanYou</td><td>184k</td><td>更轻量、易于上手、中文文档友好</td></tr></tbody></table><ul><li><p>框架趋同/互相借鉴</p><ul><li><strong>Vue借鉴knockout模板引擎、借鉴Angular双向数据绑定、借鉴React虚拟dom/redux/JSX</strong></li><li>跨端开发（Ionic/ReactNative/Weex）</li><li>桌面开发（electron支持vue/react）</li><li>总之，你有我有全都有，大家好才是真的好</li></ul></li><li><p>类vue的开发模式（新赛道）：小程序、uniapp</p></li><li><p>vue3.0 vs react hooks</p></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本章主要介绍了vue的诞生背景，和其他mvvm的区别，以及未来的发展趋势等内容。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2>',18)]))}const v=e(i,[["render",o]]);export{p as __pageData,v as default};
