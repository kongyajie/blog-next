import{_ as t,c as o,o as l,ae as a}from"./chunks/framework.Dh1jimFm.js";const d=JSON.parse('{"title":"排序总结","description":"","frontmatter":{},"headers":[],"relativePath":"article/数据结构与算法/算法/排序/排序概览.md","filePath":"article/数据结构与算法/算法/排序/排序概览.md","lastUpdated":1743862747000}'),r={name:"article/数据结构与算法/算法/排序/排序概览.md"};function c(i,e,n,_,s,u){return l(),o("div",null,e[0]||(e[0]=[a('<h1 id="排序总结" tabindex="-1">排序总结 <a class="header-anchor" href="#排序总结" aria-label="Permalink to &quot;排序总结&quot;">​</a></h1><ul><li>冒泡排序</li></ul><blockquote><p>最大值冒到最右侧，每轮出一个最大值，N轮后结束，时间复杂度 <code>O(n^2)</code></p></blockquote><ul><li>快速排序</li></ul><blockquote><p>随机一个基准点pivot，遍历数组，小于基准点的放左侧，大于基准点的放右侧；接着继续对左侧和右侧分别进行快排，时间复杂度 <code>O(nLogn)</code></p></blockquote><ul><li>插入排序</li></ul><blockquote><blockquote><p>将左侧序列看成一个有序序列，每次将一个数字插入该有序序列。插入时，从有序序列最右侧开始比较，若比较的数较大，后移一位。</p></blockquote></blockquote><ul><li><a href="https://www.cnblogs.com/onepixel/articles/7674659.html" target="_blank" rel="noreferrer">十大经典排序算法（动图演示）</a></li></ul>',8)]))}const b=t(r,[["render",c]]);export{d as __pageData,b as default};
