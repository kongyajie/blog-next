import{_ as e,c as i,o,ae as a}from"./chunks/framework.Dh1jimFm.js";const h=JSON.parse('{"title":"每周任务","description":"","frontmatter":{},"headers":[],"relativePath":"article/架构师课程/任务总览.md","filePath":"article/架构师课程/任务总览.md","lastUpdated":1743859882000}'),r={name:"article/架构师课程/任务总览.md"};function t(c,l,n,d,u,s){return o(),i("div",null,l[0]||(l[0]=[a('<h1 id="每周任务" tabindex="-1">每周任务 <a class="header-anchor" href="#每周任务" aria-label="Permalink to &quot;每周任务&quot;">​</a></h1><p><strong>脚手架项目研发流程</strong></p><p>预研：</p><ul><li>[x] 开发第一个helloworld脚手架</li><li>[x] 使用原生开发脚手架（init、-V）</li></ul><p>设计：</p><ul><li>[x] 绘制架构图</li></ul><p>开发：</p><ul><li>[x] 搭建脚手架框架：使用 <code>lerna</code> 搭建（lerna源码解析、yargs使用）</li><li>[x] 处理脚手架分包：使用 <code>lerna</code> 处理分包，分类有core、command、models、utils等</li><li>[x] 开发脚手架命令的注册：<code>commander</code></li><li>[x] 开发脚手架命令的执行：<code>child_process</code> 多线程</li><li>[x] 开发项目创建交互：<code>inquirer</code></li><li>[x] 开发项目模板：模板开发、获取模板API、模板下载</li><li>[x] 开发项目模板安装：<code>ejs</code></li></ul><p>完成时间：2022-02-07 ~ 2022-02-22</p><h2 id="week2" tabindex="-1">Week2 <a class="header-anchor" href="#week2" aria-label="Permalink to &quot;Week2&quot;">​</a></h2><ul><li><p>标准：</p><ul><li><strong>理解脚手架的实现原理</strong></li><li>基于 <code>Lerna</code> 搭建自己的脚手架并发布到npm（功能不限）</li></ul></li><li><p>进阶：</p><ul><li>理解 <code>Yargs</code> 常用API和开发流程</li><li>理解 <code>Lerna</code> 实现原理</li><li>理解 <code>import-local</code> 实现原理，理解 <code>require.resolve</code> 实现原理</li></ul></li></ul><h2 id="week3" tabindex="-1">Week3 <a class="header-anchor" href="#week3" aria-label="Permalink to &quot;Week3&quot;">​</a></h2><ul><li><p>标准</p><ul><li><strong>绘制 imooc-cli 脚手架架构设计图</strong></li><li><strong>实现 imooc-cli 脚手架准备过程代码</strong></li><li>通过 commander 框架实现一个脚手架，包含自定义 option 和 command 功能</li></ul></li><li><p>进阶</p><ul><li>通过 webpack 和 原生两种方式实现 Node 对 ESModule 的支持</li></ul></li></ul><h2 id="week4" tabindex="-1">Week4 <a class="header-anchor" href="#week4" aria-label="Permalink to &quot;Week4&quot;">​</a></h2><ul><li><p>标准：</p><ul><li><strong>完成 imooc-cli 脚手架动态命令执行代码</strong></li></ul></li><li><p>进阶：</p><ul><li>尝试分析Node多进程execSync/execFileSync/spawnSync源码</li></ul></li></ul><h2 id="week5" tabindex="-1">Week5 <a class="header-anchor" href="#week5" aria-label="Permalink to &quot;Week5&quot;">​</a></h2><ul><li><p>标准：</p><ul><li><strong>实现 imooc-cli 脚手架创建项目功能</strong></li></ul></li><li><p>进阶：</p><ul><li>自主完成readline核心实现原理</li><li>自主完成命令行交互列表组件开发</li></ul></li></ul><h2 id="week6" tabindex="-1">Week6 <a class="header-anchor" href="#week6" aria-label="Permalink to &quot;Week6&quot;">​</a></h2><ul><li><p>标准：</p><ul><li>完成 <strong>imooc-cli</strong> 脚手架创建项目和组件流程开发</li></ul></li><li><p>进阶：</p><ul><li>分享ejs和require源码学习过程和感悟</li></ul></li></ul>',19)]))}const m=e(r,[["render",t]]);export{h as __pageData,m as default};
